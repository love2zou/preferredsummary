<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Preferred.Api</name>
    </assembly>
    <members>
        <member name="T:Preferred.Api.Services.ScheduledTaskBackgroundService">
            <summary>
            定时任务后台服务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskBackgroundService.RefreshScheduledTasksAsync">
            <summary>
            刷新定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskBackgroundService.StartTask(Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            启动定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskBackgroundService.ConvertQuartzCronToStandard(System.String)">
            <summary>
            转换 Quartz 风格的 Cron 表达式为标准格式
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskBackgroundService.ExecuteTaskAsync(System.Int32)">
            <summary>
            执行定时任务
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.CategoryService">
            <summary>
            分类服务实现
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.FileService">
            <summary>
            文件服务实现
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.ICategoryService">
            <summary>
            分类服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.GetCategoryList(System.Int32,System.Int32,Preferred.Api.Models.CategorySearchParams)">
            <summary>
            获取分类列表
            </summary>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <param name="searchParams">搜索参数</param>
            <returns>分类列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.GetCategoryCount(Preferred.Api.Models.CategorySearchParams)">
            <summary>
            获取分类总数
            </summary>
            <param name="searchParams">搜索参数</param>
            <returns>总数</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.GetCategoryById(System.Int32)">
            <summary>
            根据ID获取分类
            </summary>
            <param name="id">分类ID</param>
            <returns>分类详情</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.GetCategoryCodeList">
            <summary>
            获取所有分类代码列表
            </summary>
            <returns>分类代码列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.CreateCategory(Preferred.Api.Models.CategoryDto)">
            <summary>
            创建分类
            </summary>
            <param name="categoryDto">分类创建信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.UpdateCategory(System.Int32,Preferred.Api.Models.CategoryDto)">
            <summary>
            更新分类
            </summary>
            <param name="id">分类ID</param>
            <param name="categoryDto">分类更新信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.DeleteCategory(System.Int32)">
            <summary>
            删除分类
            </summary>
            <param name="id">分类ID</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.IsCategoryCodeExists(System.String,System.Nullable{System.Int32})">
            <summary>
            检查分类代码是否存在
            </summary>
            <param name="categoryCode">分类代码</param>
            <param name="excludeId">排除的ID（用于更新时检查）</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.BatchDeleteCategories(System.Int32[])">
            <summary>
            批量删除分类
            </summary>
            <param name="ids">分类ID数组</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.ICategoryService.UpdateCategorySeqNo(System.Int32,System.Int32)">
            <summary>
            更新分类排序
            </summary>
            <param name="id">分类ID</param>
            <param name="seqNo">新的排序号</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:Preferred.Api.Services.IFileService">
            <summary>
            文件服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.GetFileList(System.Int32,System.Int32,Preferred.Api.Models.FileSearchParams)">
            <summary>
            获取文件列表
            </summary>
            <param name="page">页码</param>
            <param name="size">每页数量</param>
            <param name="searchParams">搜索参数</param>
            <returns>文件列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.GetFileCount(Preferred.Api.Models.FileSearchParams)">
            <summary>
            获取文件总数
            </summary>
            <param name="searchParams">搜索参数</param>
            <returns>文件总数</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.GetFileById(System.Int32)">
            <summary>
            根据ID获取文件详情
            </summary>
            <param name="id">文件ID</param>
            <returns>文件详情</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.SaveFileRecord(Preferred.Api.Models.FileRecord)">
            <summary>
            保存文件记录
            </summary>
            <param name="fileRecord">文件记录</param>
            <returns>保存结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.GetFileStream(System.Int32)">
            <summary>
            获取文件流用于下载
            </summary>
            <param name="id">文件ID</param>
            <returns>文件流和文件信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.DeleteFile(System.Int32)">
            <summary>
            删除文件
            </summary>
            <param name="id">文件ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.BatchDeleteFiles(System.Collections.Generic.List{System.Int32})">
            <summary>
            批量删除文件
            </summary>
            <param name="ids">文件ID列表</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.CleanExpiredFiles(System.Int32)">
            <summary>
            清理过期文件
            </summary>
            <param name="days">过期天数</param>
            <returns>清理结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.UploadFile(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String,System.Int32)">
            <summary>
            上传单个文件
            </summary>
            <param name="file">上传的文件</param>
            <param name="description">文件描述</param>
            <param name="appType">应用类型</param>
            <param name="userId">用户ID</param>
            <returns>上传结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.IFileService.BatchUploadFiles(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile},System.String,System.String,System.Int32)">
            <summary>
            批量上传文件
            </summary>
            <param name="files">上传的文件列表</param>
            <param name="description">文件描述</param>
            <param name="appType">应用类型</param>
            <param name="userId">用户ID</param>
            <returns>批量上传结果</returns>
        </member>
        <member name="T:Preferred.Api.Services.INetworkUrlService">
            <summary>
            访问地址服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.GetNetworkUrlList(System.Int32,System.Int32,Preferred.Api.Models.NetworkUrlSearchParams)">
            <summary>
            获取访问地址列表
            </summary>
            <param name="page">页码</param>
            <param name="size">每页数量</param>
            <param name="searchParams">搜索参数</param>
            <returns>访问地址列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.GetNetworkUrlCount(Preferred.Api.Models.NetworkUrlSearchParams)">
            <summary>
            获取访问地址总数
            </summary>
            <param name="searchParams">搜索参数</param>
            <returns>总数</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.GetNetworkUrlsByTagType(System.String)">
            <summary>
            根据标签类型获取访问地址列表
            </summary>
            <param name="tagCodeType">标签类型</param>
            <returns>访问地址列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.GetNetworkUrlById(System.Int32)">
            <summary>
            根据ID获取访问地址详情
            </summary>
            <param name="id">访问地址ID</param>
            <returns>访问地址详情</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.CreateNetworkUrl(Preferred.Api.Models.NetworkUrlDto)">
            <summary>
            创建访问地址
            </summary>
            <param name="networkUrlDto">访问地址信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.UpdateNetworkUrl(System.Int32,Preferred.Api.Models.NetworkUrlDto)">
            <summary>
            更新访问地址
            </summary>
            <param name="id">访问地址ID</param>
            <param name="networkUrlDto">访问地址信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.DeleteNetworkUrl(System.Int32)">
            <summary>
            删除访问地址
            </summary>
            <param name="id">访问地址ID</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.INetworkUrlService.IsUrlExists(System.String,System.Nullable{System.Int32})">
            <summary>
            检查URL是否存在
            </summary>
            <param name="url">URL地址</param>
            <param name="excludeId">排除的ID</param>
            <returns>是否存在</returns>
        </member>
        <member name="T:Preferred.Api.Services.INotificationService">
            <summary>
            通知服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.GetNotificationList(System.Int32,System.Int32,Preferred.Api.Models.NotificationSearchParams)">
            <summary>
            获取通知列表
            </summary>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <param name="searchParams">搜索参数</param>
            <returns>通知列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.GetNotificationCount(Preferred.Api.Models.NotificationSearchParams)">
            <summary>
            获取通知总数
            </summary>
            <param name="searchParams">搜索参数</param>
            <returns>总数</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.GetNotificationById(System.Int32)">
            <summary>
            根据ID获取通知
            </summary>
            <param name="id">通知ID</param>
            <returns>通知信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.CreateNotification(Preferred.Api.Models.NotificationCreateDto)">
            <summary>
            创建通知
            </summary>
            <param name="notificationDto">通知信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.UpdateNotification(Preferred.Api.Models.NotificationUpdateDto)">
            <summary>
            更新通知
            </summary>
            <param name="notificationDto">通知信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.DeleteNotification(System.Int32)">
            <summary>
            删除通知
            </summary>
            <param name="id">通知ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.BatchDeleteNotifications(System.Collections.Generic.List{System.Int32})">
            <summary>
            批量删除通知
            </summary>
            <param name="ids">通知ID列表</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.MarkAsRead(System.Int32)">
            <summary>
            标记通知为已读
            </summary>
            <param name="id">通知ID</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.BatchMarkAsRead(System.Collections.Generic.List{System.Int32})">
            <summary>
            批量标记通知为已读
            </summary>
            <param name="ids">通知ID列表</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.INotificationService.GetUnreadCount(System.String)">
            <summary>
            获取用户未读通知数量
            </summary>
            <param name="receiver">接收人</param>
            <returns>未读数量</returns>
        </member>
        <member name="T:Preferred.Api.Services.IPictureService">
            <summary>
            图片数据服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.GetPictureList(System.Int32,System.Int32,Preferred.Api.Models.PictureSearchParams)">
            <summary>
            获取图片列表
            </summary>
            <param name="page">页码</param>
            <param name="size">每页数量</param>
            <param name="searchParams">搜索参数</param>
            <returns>图片列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.GetPictureCount(Preferred.Api.Models.PictureSearchParams)">
            <summary>
            获取图片总数
            </summary>
            <param name="searchParams">搜索参数</param>
            <returns>总数</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.GetPicturesByAppType(System.String)">
            <summary>
            根据应用类型获取图片列表
            </summary>
            <param name="appType">应用类型</param>
            <returns>图片列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.GetPictureById(System.Int32)">
            <summary>
            根据ID获取图片详情
            </summary>
            <param name="id">图片ID</param>
            <returns>图片详情</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.CreatePicture(Preferred.Api.Models.PictureDto)">
            <summary>
            创建图片
            </summary>
            <param name="pictureDto">图片信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.UpdatePicture(System.Int32,Preferred.Api.Models.PictureDto)">
            <summary>
            更新图片
            </summary>
            <param name="id">图片ID</param>
            <param name="pictureDto">图片信息</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.DeletePicture(System.Int32)">
            <summary>
            删除图片
            </summary>
            <param name="id">图片ID</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.DeleteImageFile(System.String)">
            <summary>
            删除图片文件
            </summary>
            <param name="imagePath">图片路径</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IPictureService.IsImageCodeExists(System.String,System.Nullable{System.Int32})">
            <summary>
            检查图片代码是否存在
            </summary>
            <param name="imageCode">图片代码</param>
            <param name="excludeId">排除的ID</param>
            <returns>是否存在</returns>
        </member>
        <member name="T:Preferred.Api.Services.IScheduledTaskService">
            <summary>
            定时任务服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.GetAllTasksAsync">
            <summary>
            获取所有定时任务
            </summary>
            <returns>定时任务列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.GetTaskByIdAsync(System.Int32)">
            <summary>
            根据ID获取定时任务
            </summary>
            <param name="id">任务ID</param>
            <returns>定时任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.GetTaskByCodeAsync(System.String)">
            <summary>
            根据编码获取定时任务
            </summary>
            <param name="code">任务编码</param>
            <returns>定时任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.CreateTaskAsync(Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            创建定时任务
            </summary>
            <param name="taskDto">任务信息</param>
            <returns>创建的任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.UpdateTaskAsync(System.Int32,Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            更新定时任务
            </summary>
            <param name="id">任务ID</param>
            <param name="taskDto">任务信息</param>
            <returns>更新的任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.DeleteTaskAsync(System.Int32)">
            <summary>
            删除定时任务
            </summary>
            <param name="id">任务ID</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.SetTaskEnabledAsync(System.Int32,System.Boolean)">
            <summary>
            启用/禁用定时任务
            </summary>
            <param name="id">任务ID</param>
            <param name="enabled">是否启用</param>
            <returns>是否操作成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.ExecuteTaskAsync(System.Int32)">
            <summary>
            手动执行定时任务
            </summary>
            <param name="id">任务ID</param>
            <returns>是否执行成功</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.GetTaskLogsAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            获取任务执行日志
            </summary>
            <param name="taskId">任务ID</param>
            <param name="success">执行结果</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">页大小</param>
            <returns>执行日志列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.CleanExpiredLogsAsync(System.Int32)">
            <summary>
            清理过期日志
            </summary>
            <param name="days">保留天数</param>
            <returns>清理的日志数量</returns>
        </member>
        <member name="M:Preferred.Api.Services.IScheduledTaskService.BatchDeleteTasksAsync(System.Int32[])">
            <summary>
            批量删除定时任务
            </summary>
            <param name="ids">任务ID数组</param>
            <returns>批量删除结果</returns>
        </member>
        <member name="T:Preferred.Api.Services.ISystemMonitorService">
            <summary>
            系统监控服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ISystemMonitorService.GetCurrentSystemResourceAsync">
            <summary>
            获取当前系统资源使用情况
            </summary>
            <returns>系统资源数据</returns>
        </member>
        <member name="M:Preferred.Api.Services.ISystemMonitorService.MonitorAndSaveAsync">
            <summary>
            执行系统资源监控并保存到数据库
            </summary>
            <returns></returns>
        </member>
        <member name="T:Preferred.Api.Services.ISystemResourceService">
            <summary>
            系统资源服务接口
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ISystemResourceService.GetLatestSystemResource">
            <summary>
            获取最新的系统资源信息
            </summary>
            <returns>最新系统资源信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.ISystemResourceService.GetSystemResourceList(System.DateTime,System.DateTime)">
            <summary>
            获取指定时间范围内的系统资源列表
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>系统资源列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.ISystemResourceService.GetDailySystemResourceData">
            <summary>
            获取一天内的系统资源数据（5分钟间隔）
            </summary>
            <returns>系统资源列表</returns>
        </member>
        <member name="M:Preferred.Api.Services.ISystemResourceService.CreateSystemResource(Preferred.Api.Models.SystemResourceCreateDto)">
            <summary>
            创建系统资源记录
            </summary>
            <param name="resourceDto">系统资源信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Services.ISystemResourceService.GetSystemResourceStats">
            <summary>
            获取系统资源统计信息
            </summary>
            <returns>统计信息</returns>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.GetTagList(System.Int32,System.Int32,Preferred.Api.Models.TagSearchParams)">
            <summary>
            获取标签列表
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.GetTagCount(Preferred.Api.Models.TagSearchParams)">
            <summary>
            获取标签总数
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.GetTagById(System.Int32)">
            <summary>
            根据ID获取标签
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.GetParNameList">
            <summary>
            根据应用模块获取标签列表
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.GetTagsByParName(System.String)">
            <summary>
            根据应用模块名称获取标签列表
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.CreateTag(Preferred.Api.Models.TagDto)">
            <summary>
            创建标签
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.UpdateTag(System.Int32,Preferred.Api.Models.TagDto)">
            <summary>
            更新标签
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.DeleteTag(System.Int32)">
            <summary>
            删除标签
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.IsTagCodeExists(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            检查标签代码是否存在
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.ImportTagsFromExcel(System.IO.Stream,System.IProgress{Preferred.Api.Models.TagImportProgress})">
            <summary>
            导入标签数据
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.GenerateImportResultExcel(System.Collections.Generic.List{Preferred.Api.Models.TagImportResult})">
            <summary>
            生成导入结果Excel文件
            </summary>
            <param name="results">导入结果列表</param>
            <returns>Excel文件字节数组</returns>
        </member>
        <member name="M:Preferred.Api.Services.ITagService.BatchDeleteTags(System.Int32[])">
            <summary>
            批量删除标签
            </summary>
            <param name="ids">标签ID数组</param>
            <returns>删除结果</returns>
        </member>
        <member name="T:Preferred.Api.Services.BatchDeleteResult">
            <summary>
            批量删除结果
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.NetworkUrlService">
            <summary>
            访问地址服务实现
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.NotificationService">
            <summary>
            通知服务实现
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.PictureService">
            <summary>
            图片数据服务实现
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.ScheduledTaskService">
            <summary>
            定时任务服务实现
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.GetAllTasksAsync">
            <summary>
            获取所有定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.MapToDtoWithExtendedInfoAsync(Preferred.Api.Models.ScheduledTask)">
            <summary>
            实体转DTO（包含扩展信息）
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.CalculateNextRunTime(System.String)">
            <summary>
            计算下次执行时间
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.ConvertQuartzCronToStandard(System.String)">
            <summary>
            转换 Quartz 风格的 Cron 表达式为标准格式
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.GetLatestExecutionDurationAsync(System.Int32)">
            <summary>
            获取最近一次执行耗时
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.GetTaskByIdAsync(System.Int32)">
            <summary>
            根据ID获取定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.GetTaskByCodeAsync(System.String)">
            <summary>
            根据编码获取定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.CreateTaskAsync(Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            创建定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.UpdateTaskAsync(System.Int32,Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            更新定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.DeleteTaskAsync(System.Int32)">
            <summary>
            删除定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.SetTaskEnabledAsync(System.Int32,System.Boolean)">
            <summary>
            启用/禁用定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.ExecuteTaskAsync(System.Int32)">
            <summary>
            手动执行定时任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.ExecuteTaskByHandlerAsync(Preferred.Api.Models.ScheduledTask)">
            <summary>
            根据处理器类型执行任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.ExecuteSystemMonitorTaskAsync(Preferred.Api.Models.ScheduledTask)">
            <summary>
            执行系统监控任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.ExecuteLogCleanupTaskAsync(Preferred.Api.Models.ScheduledTask)">
            <summary>
            执行日志清理任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.ExecuteDataBackupTaskAsync(Preferred.Api.Models.ScheduledTask)">
            <summary>
            执行数据备份任务
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.GetTaskLogsAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            获取任务执行日志
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.CleanExpiredLogsAsync(System.Int32)">
            <summary>
            清理过期日志
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.MapToDto(Preferred.Api.Models.ScheduledTask)">
            <summary>
            实体转DTO
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.ScheduledTaskService.BatchDeleteTasksAsync(System.Int32[])">
            <summary>
            批量删除定时任务
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.SystemMonitorService">
            <summary>
            跨平台系统监控服务实现
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetCurrentSystemResourceAsync">
            <summary>
            获取当前系统资源使用情况
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.MonitorAndSaveAsync">
            <summary>
            执行系统资源监控并保存到数据库
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetCpuUsageAsync">
            <summary>
            跨平台获取CPU使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetWindowsCpuUsageAsync">
            <summary>
            Windows系统CPU使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetLinuxCpuUsageAsync">
            <summary>
            Linux系统CPU使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetCpuUsageViaProcessAsync">
            <summary>
            通过进程方式获取CPU使用率（备选方案）
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetMemoryUsageAsync">
            <summary>
            跨平台获取内存使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetWindowsMemoryUsageAsync">
            <summary>
            Windows系统内存使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetWindowsMemoryUsageViaProcessAsync">
            <summary>
            通过进程信息估算 Windows 内存使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetLinuxMemoryUsageAsync">
            <summary>
            Linux 系统内存使用率
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.ReadProcMeminfoAsync">
            <summary>
            读取 /proc/meminfo 文件获取内存信息（优化版本）
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetPlatformSpecificDiskPath(System.String)">
            <summary>
            获取适合当前平台的磁盘路径
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetDiskUsageAsync(System.String)">
            <summary>
            跨平台获取磁盘使用情况
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetWindowsDiskUsageAsync(System.String)">
            <summary>
            Windows 系统磁盘使用情况
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.GetLinuxDiskUsageAsync(System.String)">
            <summary>
            Linux 系统磁盘使用情况
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemMonitorService.ReadProcStatAsync">
            <summary>
            读取 /proc/stat 文件获取 CPU 统计信息（优化版本）
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.SystemMonitorService.CpuStat">
            <summary>
            CPU 统计信息结构
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.SystemMonitorService.MemInfo">
            <summary>
            内存信息结构
            </summary>
        </member>
        <member name="T:Preferred.Api.Services.SystemResourceService">
            <summary>
            系统资源服务实现
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemResourceService.GetLatestSystemResource">
            <summary>
            获取最新的系统资源信息
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemResourceService.GetSystemResourceList(System.DateTime,System.DateTime)">
            <summary>
            获取指定时间范围内的系统资源列表
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemResourceService.GetDailySystemResourceData">
            <summary>
            获取一天内的系统资源数据（5分钟间隔）
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemResourceService.CreateSystemResource(Preferred.Api.Models.SystemResourceCreateDto)">
            <summary>
            创建系统资源记录
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.SystemResourceService.GetSystemResourceStats">
            <summary>
            获取系统资源统计信息
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.ImportTagsFromExcel(System.IO.Stream,System.IProgress{Preferred.Api.Models.TagImportProgress})">
            <summary>
            导入标签数据
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.ValidateImportData(Preferred.Api.Models.TagImportResult,System.Collections.Generic.List{System.String},System.Collections.Generic.HashSet{System.String})">
            <summary>
            验证导入数据
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.GenerateTagColors">
            <summary>
            生成标签颜色
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.GenerateRandomHighContrastColor(System.Random)">
            <summary>
            生成随机高对比度颜色
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.HslToRgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            HSL转RGB
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.GenerateImportResultExcel(System.Collections.Generic.List{Preferred.Api.Models.TagImportResult})">
            <summary>
            生成导入结果Excel文件
            </summary>
        </member>
        <member name="M:Preferred.Api.Services.TagService.BatchDeleteTags(System.Int32[])">
            <summary>
            批量删除标签
            </summary>
            <param name="ids">标签ID数组</param>
            <returns>删除结果</returns>
        </member>
        <member name="T:Preferred.Api.Controllers.AuthController">
            <summary>
            用户认证控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.AuthController.#ctor(Preferred.Api.Services.IUserService)">
            <summary>
            构造函数
            </summary>
            <param name="userService">用户服务</param>
        </member>
        <member name="M:Preferred.Api.Controllers.AuthController.Register(Preferred.Api.Models.UserDto)">
            <summary>
            用户注册
            </summary>
            <param name="userDto">用户注册信息</param>
            <returns>注册结果</returns>
            <remarks>
            示例请求:
            
                POST /api/auth/register
                {
                    "username": "john_doe",
                    "password": "123456",
                    "email": "john@example.com",
                    "firstName": "John",
                    "lastName": "Doe"
                }
            
            </remarks>
            <response code="200">注册成功</response>
            <response code="400">请求参数错误或用户已存在</response>
        </member>
        <member name="M:Preferred.Api.Controllers.AuthController.Login(Preferred.Api.Models.LoginDto)">
            <summary>
            用户登录
            </summary>
            <param name="loginDto">用户登录信息</param>
            <returns>登录结果，包含JWT令牌和用户信息</returns>
            <remarks>
            示例请求:
            
                POST /api/auth/login
                {
                    "username": "john_doe",
                    "password": "123456"
                }
            
            </remarks>
            <response code="200">登录成功，返回JWT令牌和用户信息</response>
            <response code="400">用户名或密码错误</response>
        </member>
        <member name="T:Preferred.Api.Controllers.CategoryController">
            <summary>
            分类管理控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.GetCategoryList(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取分类列表
            </summary>
            <param name="page">页码，默认为1</param>
            <param name="size">每页数量，默认为10</param>
            <param name="categoryCode">分类代码搜索</param>
            <param name="categoryName">分类名称搜索</param>
            <param name="description">描述搜索</param>
            <returns>分类列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.GetCategoryById(System.Int32)">
            <summary>
            根据ID获取分类详情
            </summary>
            <param name="id">分类ID</param>
            <returns>分类详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.CreateCategory(Preferred.Api.Models.CategoryDto)">
            <summary>
            创建新分类
            </summary>
            <param name="categoryDto">分类创建信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.UpdateCategory(System.Int32,Preferred.Api.Models.CategoryDto)">
            <summary>
            更新分类
            </summary>
            <param name="id">分类ID</param>
            <param name="categoryDto">分类更新信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.DeleteCategory(System.Int32)">
            <summary>
            删除分类
            </summary>
            <param name="id">分类ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.GetCategoryCodes">
            <summary>
            获取所有分类代码列表
            </summary>
            <returns>分类代码列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.CheckCategoryCodeExists(System.String,System.Nullable{System.Int32})">
            <summary>
            检查分类代码是否存在
            </summary>
            <param name="categoryCode">分类代码</param>
            <param name="excludeId">排除的ID</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.BatchDeleteCategories(Preferred.Api.Models.BatchDeleteRequest)">
            <summary>
            批量删除分类
            </summary>
            <param name="request">批量删除请求</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.CategoryController.UpdateCategorySeqNo(System.Int32,Preferred.Api.Controllers.SeqNoUpdateRequest)">
            <summary>
            更新分类排序
            </summary>
            <param name="id">分类ID</param>
            <param name="request">排序更新请求</param>
            <returns>更新结果</returns>
        </member>
        <member name="T:Preferred.Api.Controllers.SeqNoUpdateRequest">
            <summary>
            排序更新请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Controllers.SeqNoUpdateRequest.SeqNo">
            <summary>
            新的排序号
            </summary>
        </member>
        <member name="T:Preferred.Api.Controllers.FileController">
            <summary>
            文件管理控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.GetFileList(System.Int32,System.Int32,Preferred.Api.Models.FileSearchParams)">
            <summary>
            获取文件列表
            </summary>
            <param name="page">页码</param>
            <param name="size">每页数量</param>
            <param name="searchParams">搜索参数</param>
            <returns>文件列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.GetFileById(System.Int32)">
            <summary>
            根据ID获取文件详情
            </summary>
            <param name="id">文件ID</param>
            <returns>文件详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.DownloadFile(System.Int32)">
            <summary>
            下载文件
            </summary>
            <param name="id">文件ID</param>
            <returns>文件流</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.DeleteFile(System.Int32)">
            <summary>
            删除文件
            </summary>
            <param name="id">文件ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.BatchDeleteFiles(System.Collections.Generic.List{System.Int32})">
            <summary>
            批量删除文件
            </summary>
            <param name="ids">文件ID列表</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.CleanExpiredFiles(System.Int32)">
            <summary>
            清理过期文件
            </summary>
            <param name="days">过期天数</param>
            <returns>清理结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.UploadFile(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String)">
            <summary>
            上传单个文件
            </summary>
            <param name="file">上传的文件</param>
            <param name="description">文件描述</param>
            <param name="appType">应用类型</param>
            <returns>上传结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.FileController.BatchUploadFiles(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile},System.String,System.String)">
            <summary>
            批量上传文件
            </summary>
            <param name="files">上传的文件列表</param>
            <param name="description">文件描述</param>
            <param name="appType">应用类型</param>
            <returns>批量上传结果</returns>
        </member>
        <member name="T:Preferred.Api.Controllers.NetworkUrlController">
            <summary>
            访问地址管理控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.NetworkUrlController.GetNetworkUrlList(System.Int32,System.Int32,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            获取访问地址列表
            </summary>
            <param name="page">页码</param>
            <param name="pageSize">每页数量</param>
            <param name="name">名称</param>
            <param name="tagCodeTypes">标签类型列表（逗号分隔）</param>
            <param name="categoryCode">分类代码</param>
            <param name="isMark">是否推荐</param>
            <param name="isAvailable">是否可用</param>
            <returns>访问地址列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NetworkUrlController.GetNetworkUrlsByTagType(System.String)">
            <summary>
            根据标签类型获取访问地址列表
            </summary>
            <param name="tagCodeType">标签类型</param>
            <returns>访问地址列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NetworkUrlController.GetNetworkUrlById(System.Int32)">
            <summary>
            根据ID获取访问地址详情
            </summary>
            <param name="id">访问地址ID</param>
            <returns>访问地址详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NetworkUrlController.CreateNetworkUrl(Preferred.Api.Models.NetworkUrlDto)">
            <summary>
            创建新访问地址记录
            </summary>
            <param name="networkUrlDto">访问地址创建信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NetworkUrlController.UpdateNetworkUrl(System.Int32,Preferred.Api.Models.NetworkUrlDto)">
            <summary>
            更新访问地址
            </summary>
            <param name="id">访问地址ID</param>
            <param name="networkUrlDto">访问地址更新信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NetworkUrlController.DeleteNetworkUrl(System.Int32)">
            <summary>
            删除访问地址
            </summary>
            <param name="id">访问地址ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="T:Preferred.Api.Controllers.NotificationController">
            <summary>
            通知管理控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.GetNotificationList(System.Int32,System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            获取通知列表
            </summary>
            <param name="page">页码，默认为1</param>
            <param name="size">每页数量，默认为10</param>
            <param name="name">标题搜索</param>
            <param name="content">内容搜索</param>
            <param name="notifyType">通知类型搜索</param>
            <param name="notifyStatus">通知状态搜索</param>
            <param name="isRead">是否已读搜索</param>
            <param name="sendUser">发送人搜索</param>
            <param name="receiver">接收人搜索</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>通知列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.GetNotificationById(System.Int32)">
            <summary>
            根据ID获取通知详情
            </summary>
            <param name="id">通知ID</param>
            <returns>通知详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.CreateNotification(Preferred.Api.Models.NotificationCreateDto)">
            <summary>
            创建通知
            </summary>
            <param name="notificationDto">通知信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.UpdateNotification(Preferred.Api.Models.NotificationUpdateDto)">
            <summary>
            更新通知
            </summary>
            <param name="notificationDto">通知信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.DeleteNotification(System.Int32)">
            <summary>
            删除通知
            </summary>
            <param name="id">通知ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.BatchDeleteNotifications(System.Collections.Generic.List{System.Int32})">
            <summary>
            批量删除通知
            </summary>
            <param name="ids">通知ID列表</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.MarkAsRead(System.Int32)">
            <summary>
            标记通知为已读
            </summary>
            <param name="id">通知ID</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.BatchMarkAsRead(System.Collections.Generic.List{System.Int32})">
            <summary>
            批量标记通知为已读
            </summary>
            <param name="ids">通知ID列表</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.NotificationController.GetUnreadCount(System.String)">
            <summary>
            获取用户未读通知数量
            </summary>
            <param name="receiver">接收人</param>
            <returns>未读数量</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.GetPictureList(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取图片列表
            </summary>
            <param name="page">页码，默认为1</param>
            <param name="size">每页数量，默认为20</param>
            <param name="appType">应用类型搜索</param>
            <param name="imageName">图片名称搜索</param>
            <param name="imageCode">图片代码搜索</param>
            <returns>图片列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.GetPicturesByAppType(System.String)">
            <summary>
            根据应用类型获取图片列表
            </summary>
            <param name="appType">应用类型</param>
            <returns>图片列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.GetPictureById(System.Int32)">
            <summary>
            根据ID获取图片详情
            </summary>
            <param name="id">图片ID</param>
            <returns>图片详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.UploadImage(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            上传图片
            </summary>
            <param name="file">图片文件</param>
            <param name="aspectRatio">宽高比</param>
            <returns>上传结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.CreatePicture(Preferred.Api.Models.PictureDto)">
            <summary>
            创建新图片记录
            </summary>
            <param name="pictureDto">图片创建信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.UpdatePicture(System.Int32,Preferred.Api.Models.PictureDto)">
            <summary>
            更新图片
            </summary>
            <param name="id">图片ID</param>
            <param name="pictureDto">图片更新信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.DeletePicture(System.Int32)">
            <summary>
            删除图片
            </summary>
            <param name="id">图片ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.DeleteImageFile(System.String)">
            <summary>
            删除图片文件
            </summary>
            <param name="imagePath">图片路径</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.PictureController.GetGCD(System.Int32,System.Int32)">
            <summary>
            计算最大公约数
            </summary>
        </member>
        <member name="T:Preferred.Api.Controllers.ScheduledTaskController">
            <summary>
            定时任务控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.GetAllTasks(System.Int32,System.Int32)">
            <summary>
            获取所有定时任务
            </summary>
            <returns>定时任务列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.GetTaskById(System.Int32)">
            <summary>
            根据ID获取定时任务
            </summary>
            <param name="id">任务ID</param>
            <returns>定时任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.CreateTask(Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            创建定时任务
            </summary>
            <param name="taskDto">任务信息</param>
            <returns>创建的任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.UpdateTask(System.Int32,Preferred.Api.Models.ScheduledTaskDto)">
            <summary>
            更新定时任务
            </summary>
            <param name="id">任务ID</param>
            <param name="taskDto">任务信息</param>
            <returns>更新的任务信息</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.DeleteTask(System.Int32)">
            <summary>
            删除定时任务
            </summary>
            <param name="id">任务ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.BatchDeleteTasks(Preferred.Api.Models.BatchDeleteTaskRequest)">
            <summary>
            批量删除定时任务
            </summary>
            <param name="request">批量删除请求</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.SetTaskEnabled(System.Int32,Preferred.Api.Models.TaskEnabledRequest)">
            <summary>
            启用/禁用定时任务
            </summary>
            <param name="id">任务ID</param>
            <param name="request">启用/禁用请求</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.ExecuteTask(System.Int32)">
            <summary>
            手动执行定时任务
            </summary>
            <param name="id">任务ID</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.GetTaskLogs(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            获取任务执行日志
            </summary>
            <param name="taskId">任务ID（可选）</param>
            <param name="success">执行结果（可选）</param>
            <param name="startTime">开始时间（可选）</param>
            <param name="endTime">结束时间（可选）</param>
            <param name="page">页码</param>
            <param name="size">页大小</param>
            <returns>执行日志列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.CleanExpiredLogs(System.Int32)">
            <summary>
            清理过期日志
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.ScheduledTaskController.InitSystemMonitorTask">
            <summary>
            初始化系统资源监控定时任务
            </summary>
            <returns>初始化结果</returns>
        </member>
        <member name="T:Preferred.Api.Controllers.SystemResourceController">
            <summary>
            系统资源控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.SystemResourceController.GetLatestSystemResource">
            <summary>
            获取最新的系统资源信息
            </summary>
            <returns>最新系统资源信息</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.SystemResourceController.GetDailySystemResourceData">
            <summary>
            获取一天内的系统资源数据
            </summary>
            <returns>系统资源列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.SystemResourceController.GetSystemResourceStats">
            <summary>
            获取系统资源统计信息
            </summary>
            <returns>统计信息</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.SystemResourceController.CreateSystemResource(Preferred.Api.Models.SystemResourceCreateDto)">
            <summary>
            创建系统资源记录
            </summary>
            <param name="resourceDto">系统资源信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="T:Preferred.Api.Controllers.TagController">
            <summary>
            标签管理控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.GetTagList(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取标签列表
            </summary>
            <param name="page">页码，默认为1</param>
            <param name="size">每页数量，默认为10</param>
            <param name="parName">应用模块搜索</param>
            <param name="tagCode">标签代码搜索</param>
            <param name="tagName">标签名称搜索</param>
            <returns>标签列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.GetTagsByParName(System.String)">
            <summary>
            根据应用模块获取标签列表
            </summary>
            <param name="parName">应用模块名称</param>
            <returns>标签列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.GetTagById(System.Int32)">
            <summary>
            根据ID获取标签详情
            </summary>
            <param name="id">标签ID</param>
            <returns>标签详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.CreateTag(Preferred.Api.Models.TagDto)">
            <summary>
            创建新标签
            </summary>
            <param name="tagDto">标签创建信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.UpdateTag(System.Int32,Preferred.Api.Models.TagDto)">
            <summary>
            更新标签
            </summary>
            <param name="id">标签ID</param>
            <param name="tagDto">标签更新信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.DeleteTag(System.Int32)">
            <summary>
            删除标签
            </summary>
            <param name="id">标签ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.GetModules">
            <summary>
            获取所有应用模块列表
            </summary>
            <returns>应用模块列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.DownloadTemplate">
            <summary>
            下载标签导入模板
            </summary>
            <returns>Excel模板文件</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.ImportTags(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            导入标签数据
            </summary>
            <param name="file">Excel文件</param>
            <returns>导入结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.GenerateTemplate">
            <summary>
            生成导入模板
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.TagController.BatchDeleteTags(System.Int32[])">
            <summary>
            批量删除标签
            </summary>
            <param name="ids">标签ID数组</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.TestController.TestSystemMonitor">
            <summary>
            测试系统监控服务
            </summary>
        </member>
        <member name="T:Preferred.Api.Controllers.UserController">
            <summary>
            用户管理控制器
            </summary>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.GetUserList(System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            获取用户列表
            </summary>
            <param name="page">页码，默认为1</param>
            <param name="size">每页数量，默认为10</param>
            <param name="username">用户名搜索</param>
            <param name="email">邮箱搜索</param>
            <param name="isActive">用户状态筛选</param>
            <returns>用户列表</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.GetUserDetail(System.Int32)">
            <summary>
            根据ID获取用户详情
            </summary>
            <param name="id">用户ID</param>
            <returns>用户详情</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.UpdateUser(System.Int32,Preferred.Api.Models.UserUpdateDto)">
            <summary>
            更新用户信息
            </summary>
            <param name="id">用户ID</param>
            <param name="userDto">用户更新信息</param>
            <returns>更新结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            删除用户
            </summary>
            <param name="id">用户ID</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.BatchDeleteUsers(System.Int32[])">
            <summary>
            批量删除用户
            </summary>
            <param name="ids">用户ID数组</param>
            <returns>删除结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.ToggleUserStatus(System.Int32,System.Boolean)">
            <summary>
            启用/禁用用户
            </summary>
            <param name="id">用户ID</param>
            <param name="isActive">是否启用</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.CreateUser(Preferred.Api.Models.UserDto)">
            <summary>
            创建新用户
            </summary>
            <param name="userDto">用户创建信息</param>
            <returns>创建结果</returns>
        </member>
        <member name="M:Preferred.Api.Controllers.UserController.ChangePassword(Preferred.Api.Models.ChangePasswordDto)">
            <summary>
            修改用户密码
            </summary>
            <param name="changePasswordDto">修改密码信息</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:Preferred.Api.Extensions.ServiceCollectionExtensions.AddApplicationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            注册应用程序服务
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ApiResponse`1">
            <summary>
            API响应基础模型
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="P:Preferred.Api.Models.ApiResponse`1.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ApiResponse`1.Message">
            <summary>
            响应消息
            </summary>
            <example>操作成功</example>
        </member>
        <member name="P:Preferred.Api.Models.ApiResponse`1.Data">
            <summary>
            响应数据
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ApiResponse`1.ErrorCode">
            <summary>
            错误代码（可选）
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ApiResponse">
            <summary>
            无数据的 API 响应
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ApiErrorResponse">
            <summary>
            API错误响应模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ApiErrorResponse.Message">
            <summary>
            错误消息
            </summary>
            <example>用户名或密码错误</example>
        </member>
        <member name="P:Preferred.Api.Models.ApiErrorResponse.Details">
            <summary>
            错误详情（可选）
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.PagedResponse`1">
            <summary>
            分页响应模型
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="P:Preferred.Api.Models.PagedResponse`1.Data">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PagedResponse`1.Total">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PagedResponse`1.Page">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PagedResponse`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PagedResponse`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.Category">
            <summary>
            分类实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.CategoryCode">
            <summary>
            分类代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.CategoryName">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.CategoryIcon">
            <summary>
            分类图标
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Category.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.CategoryDto">
            <summary>
            分类创建/更新请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.CategoryDto.CategoryCode">
            <summary>
            分类代码
            </summary>
            <example>DESIGN</example>
        </member>
        <member name="P:Preferred.Api.Models.CategoryDto.CategoryName">
            <summary>
            分类名称
            </summary>
            <example>设计工具</example>
        </member>
        <member name="P:Preferred.Api.Models.CategoryDto.CategoryIcon">
            <summary>
            分类图标
            </summary>
            <example>el-icon-design</example>
        </member>
        <member name="P:Preferred.Api.Models.CategoryDto.Description">
            <summary>
            描述
            </summary>
            <example>设计相关的工具和资源</example>
        </member>
        <member name="P:Preferred.Api.Models.CategoryDto.SeqNo">
            <summary>
            排序号
            </summary>
            <example>1</example>
        </member>
        <member name="T:Preferred.Api.Models.CategoryListDto">
            <summary>
            分类列表响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.CategorySearchParams">
            <summary>
            分类搜索参数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.CategorySearchParams.CategoryCode">
            <summary>
            分类代码搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.CategorySearchParams.CategoryName">
            <summary>
            分类名称搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.CategorySearchParams.Description">
            <summary>
            描述搜索
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.BatchDeleteRequest">
            <summary>
            批量删除请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.BatchDeleteRequest.Ids">
            <summary>
            要删除的ID列表
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.FileRecord">
            <summary>
            文件记录实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.FileSize">
            <summary>
            文件大小(Mb)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.Description">
            <summary>
            文件描述
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.UploadUserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.AppType">
            <summary>
            应用类型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileRecord.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.FileSearchParams">
            <summary>
            文件搜索参数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileSearchParams.FileName">
            <summary>
            文件名搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileSearchParams.FileType">
            <summary>
            文件类型搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileSearchParams.UploadUser">
            <summary>
            上传用户搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileSearchParams.AppType">
            <summary>
            应用类型搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileSearchParams.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileSearchParams.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.FileListDto">
            <summary>
            文件列表响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.FileBatchDeleteResult">
            <summary>
            批量删除结果
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.CleanExpiredFilesResult">
            <summary>
            清理过期文件结果
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.FileStorageConfig">
            <summary>
            文件存储配置
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileStorageConfig.ServerHost">
            <summary>
            服务器主机地址
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileStorageConfig.ServerPort">
            <summary>
            服务器端口
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileStorageConfig.ImageBasePath">
            <summary>
            图片基础路径
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileStorageConfig.LocalUploadPath">
            <summary>
            本地上传路径
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileStorageConfig.UseRemoteAccess">
            <summary>
            是否使用远程访问
            </summary>
        </member>
        <member name="M:Preferred.Api.Models.FileStorageConfig.GetImageUrl(System.String)">
            <summary>
            获取完整的服务器图片URL
            </summary>
            <param name="fileName">文件名</param>
            <returns>完整URL</returns>
        </member>
        <member name="M:Preferred.Api.Models.FileStorageConfig.GetLocalUploadPath">
            <summary>
            获取本地存储路径（容器内的绝对路径）
            </summary>
            <returns>本地路径</returns>
        </member>
        <member name="T:Preferred.Api.Models.FileUploadResult">
            <summary>
            文件上传结果
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.Id">
            <summary>
            文件ID
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.UploadTime">
            <summary>
            上传时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.FileUploadResult.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.LoginResultType">
            <summary>
            登录结果枚举
            </summary>
        </member>
        <member name="F:Preferred.Api.Models.LoginResultType.Success">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:Preferred.Api.Models.LoginResultType.UserNotFound">
            <summary>
            用户不存在
            </summary>
        </member>
        <member name="F:Preferred.Api.Models.LoginResultType.PasswordIncorrect">
            <summary>
            密码错误
            </summary>
        </member>
        <member name="F:Preferred.Api.Models.LoginResultType.UserDisabled">
            <summary>
            用户已被禁用
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.LoginResult">
            <summary>
            登录结果模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NetworkUrl">
            <summary>
            访问地址实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.Url">
            <summary>
            域名地址
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.ImageCode">
            <summary>
            图片代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.CategoryCode">
            <summary>
            分类代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.IsAvailable">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.IsMark">
            <summary>
            是否推荐
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.TagCodeType">
            <summary>
            标签类型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrl.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NetworkUrlDto">
            <summary>
            访问地址DTO
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.Url">
            <summary>
            域名地址
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.ImageCode">
            <summary>
            图片代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.CategoryCode">
            <summary>
            分类代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.IsAvailable">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.IsMark">
            <summary>
            是否推荐
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.TagCodeType">
            <summary>
            标签类型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlDto.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NetworkUrlListDto">
            <summary>
            访问地址列表DTO
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NetworkUrlSearchParams">
            <summary>
            访问地址搜索参数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlSearchParams.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlSearchParams.TagCodeTypes">
            <summary>
            标签类型列表（多选）
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlSearchParams.CategoryCode">
            <summary>
            分类代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlSearchParams.IsMark">
            <summary>
            是否推荐
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.NetworkUrlSearchParams.IsAvailable">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.Notification">
            <summary>
            通知实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.IsRead">
            <summary>
            是否已读(0 未读, 1 已读)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.Name">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.NotifyType">
            <summary>
            通知类型(接口)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.NotifyStatus">
            <summary>
            通知状态(0 正常, 1 错误, 2 告警)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.SendTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.SendUser">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.Receiver">
            <summary>
            接收人
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Notification.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NotificationListDto">
            <summary>
            通知列表DTO
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NotificationCreateDto">
            <summary>
            通知创建DTO
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NotificationUpdateDto">
            <summary>
            通知更新DTO
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.NotificationSearchParams">
            <summary>
            通知搜索参数
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.Picture">
            <summary>
            图片数据实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.AppType">
            <summary>
            应用类型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.ImageCode">
            <summary>
            图片代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.ImageName">
            <summary>
            图片名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.ImagePath">
            <summary>
            图片路径
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.AspectRatio">
            <summary>
            图片宽高比
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.Width">
            <summary>
            图片宽度(px)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.Height">
            <summary>
            图片高度(px)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Picture.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.PictureDto">
            <summary>
            图片创建/更新请求模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.PictureListDto">
            <summary>
            图片列表响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.PictureSearchParams">
            <summary>
            图片搜索参数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PictureSearchParams.AppType">
            <summary>
            应用类型搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PictureSearchParams.ImageName">
            <summary>
            图片名称搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.PictureSearchParams.ImageCode">
            <summary>
            图片代码搜索
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.UploadResponse">
            <summary>
            图片上传响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ScheduledTask">
            <summary>
            定时任务实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Name">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Code">
            <summary>
            任务编码（唯一标识）
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Cron">
            <summary>
            Cron 表达式
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Handler">
            <summary>
            执行处理器（类名或URL或脚本路径）
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Parameters">
            <summary>
            执行参数（可选，JSON 格式）
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.LastRunTime">
            <summary>
            最后运行时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.NextRuntime">
            <summary>
            下次运行时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTask.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ScheduledTaskDto">
            <summary>
            定时任务 DTO
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskDto.Duration">
            <summary>
            最近一次执行耗时（毫秒）
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ScheduledTaskLogDto">
            <summary>
            定时任务日志 DTO
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLogDto.Duration">
            <summary>
            执行耗时（毫秒）
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ScheduledTaskPagedResponse">
            <summary>
            定时任务分页响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ScheduledTaskLogPagedResponse">
            <summary>
            定时任务日志分页响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.BatchDeleteTaskRequest">
            <summary>
            批量删除请求模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.BatchDeleteTaskResult">
            <summary>
            批量删除结果模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.TaskEnabledRequest">
            <summary>
            任务启用/禁用请求模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ScheduledTaskLog">
            <summary>
            定时任务执行日志实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.TaskId">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.TaskCode">
            <summary>
            任务编码（冗余记录）
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.Message">
            <summary>
            执行结果或异常信息
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ScheduledTaskLog.ScheduledTask">
            <summary>
            关联的定时任务
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.SystemMonitorConfig">
            <summary>
            系统监控配置
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemMonitorConfig.IntervalMinutes">
            <summary>
            监控间隔时间（分钟）
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemMonitorConfig.Enabled">
            <summary>
            是否启用监控
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemMonitorConfig.HostName">
            <summary>
            主机名
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemMonitorConfig.DiskName">
            <summary>
            磁盘名称
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.SystemResource">
            <summary>
            系统资源占用实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.HostName">
            <summary>
            主机名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.CpuUsage">
            <summary>
            CPU占用百分比，保留两位小数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.MemoryUsage">
            <summary>
            内存占用百分比，保留两位小数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.DiskName">
            <summary>
            系统盘名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.DiskUsage">
            <summary>
            磁盘占用百分比，保留两位小数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.DiskTotal">
            <summary>
            总磁盘容量，单位GB
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.DiskUsed">
            <summary>
            已使用磁盘容量，单位GB
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.DiskFree">
            <summary>
            可用磁盘容量，单位GB
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResource.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.SystemResourceCreateDto">
            <summary>
            系统资源创建DTO
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResourceCreateDto.DiskTotal">
            <summary>
            总磁盘容量，单位GB
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResourceCreateDto.DiskUsed">
            <summary>
            已使用磁盘容量，单位GB
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.SystemResourceCreateDto.DiskFree">
            <summary>
            可用磁盘容量，单位GB
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.SystemResourceListDto">
            <summary>
            系统资源列表DTO
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.SystemResourceSearchParams">
            <summary>
            系统资源搜索参数
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.SystemResourceStatsDto">
            <summary>
            系统资源统计DTO
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.Tag">
            <summary>
            标签实体模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.ParName">
            <summary>
            应用模块
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.TagCode">
            <summary>
            标签代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.HexColor">
            <summary>
            标签字体颜色(如：#EF0011)
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.RgbColor">
            <summary>
            标签背景色(如：rgb(1,32,12,0.1))
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.CrtTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.Tag.UpdTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.TagDto">
            <summary>
            标签创建/更新请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagDto.ParName">
            <summary>
            应用模块
            </summary>
            <example>UserManagement</example>
        </member>
        <member name="P:Preferred.Api.Models.TagDto.TagCode">
            <summary>
            标签代码
            </summary>
            <example>ACTIVE</example>
        </member>
        <member name="P:Preferred.Api.Models.TagDto.TagName">
            <summary>
            标签名称
            </summary>
            <example>活跃用户</example>
        </member>
        <member name="P:Preferred.Api.Models.TagDto.HexColor">
            <summary>
            标签字体颜色
            </summary>
            <example>#FFFFFF</example>
        </member>
        <member name="P:Preferred.Api.Models.TagDto.RgbColor">
            <summary>
            标签背景色
            </summary>
            <example>rgba(239, 0, 17, 0.1)</example>
        </member>
        <member name="P:Preferred.Api.Models.TagDto.SeqNo">
            <summary>
            排序号
            </summary>
            <example>1</example>
        </member>
        <member name="T:Preferred.Api.Models.TagListDto">
            <summary>
            标签列表响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.TagSearchParams">
            <summary>
            标签搜索参数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagSearchParams.ParName">
            <summary>
            应用模块搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagSearchParams.TagCode">
            <summary>
            标签代码搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagSearchParams.TagName">
            <summary>
            标签名称搜索
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.TagImportResult">
            <summary>
            标签导入结果模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.RowNumber">
            <summary>
            行号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.ParName">
            <summary>
            应用模块
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.TagCode">
            <summary>
            标签代码
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.SeqNo">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.HexColor">
            <summary>
            生成的字体颜色
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportResult.RgbColor">
            <summary>
            生成的背景颜色
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.TagImportProgress">
            <summary>
            标签导入进度模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportProgress.CurrentRow">
            <summary>
            当前处理行数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportProgress.TotalRows">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportProgress.Percentage">
            <summary>
            进度百分比
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.TagImportProgress.Status">
            <summary>
            当前状态
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.UserDto">
            <summary>
            用户注册请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.UserDto.Username">
            <summary>
            用户名
            </summary>
            <example>john_doe</example>
        </member>
        <member name="P:Preferred.Api.Models.UserDto.Password">
            <summary>
            密码
            </summary>
            <example>123456</example>
        </member>
        <member name="P:Preferred.Api.Models.UserDto.Email">
            <summary>
            邮箱地址（注册时必填）
            </summary>
            <example>john@example.com</example>
        </member>
        <member name="P:Preferred.Api.Models.UserDto.PhoneNumber">
            <summary>
            电话号码
            </summary>
            <example>13800138000</example>
        </member>
        <member name="P:Preferred.Api.Models.UserDto.Bio">
            <summary>
            个人简介
            </summary>
            <example>这是我的个人简介</example>
        </member>
        <member name="P:Preferred.Api.Models.UserDto.ProfilePictureUrl">
            <summary>
            头像URL
            </summary>
            <example>https://example.com/avatar.jpg</example>
        </member>
        <member name="T:Preferred.Api.Models.LoginDto">
            <summary>
            用户登录请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.LoginDto.UserName">
            <summary>
            用户名
            </summary>
            <example>john_doe</example>
        </member>
        <member name="P:Preferred.Api.Models.LoginDto.Password">
            <summary>
            密码
            </summary>
            <example>123456</example>
        </member>
        <member name="T:Preferred.Api.Models.LoginResponseDto">
            <summary>
            登录成功响应模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.LoginResponseDto.Token">
            <summary>
            JWT访问令牌
            </summary>
            <example>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</example>
        </member>
        <member name="P:Preferred.Api.Models.LoginResponseDto.UserName">
            <summary>
            用户名
            </summary>
            <example>john_doe</example>
        </member>
        <member name="P:Preferred.Api.Models.LoginResponseDto.Email">
            <summary>
            邮箱地址
            </summary>
            <example>john@example.com</example>
        </member>
        <member name="T:Preferred.Api.Models.UserListDto">
            <summary>
            用户列表响应模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.UserUpdateDto">
            <summary>
            用户更新请求模型
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.UserSearchParams">
            <summary>
            用户搜索参数
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.UserSearchParams.UserName">
            <summary>
            用户名搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.UserSearchParams.Email">
            <summary>
            邮箱搜索
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.UserSearchParams.IsActive">
            <summary>
            用户状态筛选
            </summary>
        </member>
        <member name="T:Preferred.Api.Models.ChangePasswordDto">
            <summary>
            修改密码请求模型
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ChangePasswordDto.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Preferred.Api.Models.ChangePasswordDto.NewPassword">
            <summary>
            新密码
            </summary>
        </member>
    </members>
</doc>
